// Code generated by MockGen. DO NOT EDIT.
// Source: CleverIT-challenge/internal/core/domain/currency (interfaces: Service)

// Package currencymocks is a generated GoMock package.
package currencymocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetCurrencyPriceInDollar mocks base method.
func (m *MockService) GetCurrencyPriceInDollar(arg0 context.Context, arg1 string) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrencyPriceInDollar", arg0, arg1)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrencyPriceInDollar indicates an expected call of GetCurrencyPriceInDollar.
func (mr *MockServiceMockRecorder) GetCurrencyPriceInDollar(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrencyPriceInDollar", reflect.TypeOf((*MockService)(nil).GetCurrencyPriceInDollar), arg0, arg1)
}

// IsValidCurrency mocks base method.
func (m *MockService) IsValidCurrency(arg0 context.Context, arg1 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsValidCurrency", arg0, arg1)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsValidCurrency indicates an expected call of IsValidCurrency.
func (mr *MockServiceMockRecorder) IsValidCurrency(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsValidCurrency", reflect.TypeOf((*MockService)(nil).IsValidCurrency), arg0, arg1)
}
